@model StoreBook.Domain.Entities.Product

@{
    ViewBag.Title = "AddProduct";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
    body {
    background: #30385c;
    color:#F3F3F3F3
    }
</style>
<h3>@Model.Name</h3>
@using (Html.BeginForm("Edit","Admin",FormMethod.Post,new {enctype="multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x=>x.ProductID)
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, htmlAttributes : new { @class = "form-control", rows = 5 } )
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
             <div style="position:relative">
                 <label class=" control-label col-sm-2">Image</label>
                 <a class="btn" href="javascript:;">
                     Choose File
                     <input type="file" name="Image" size="40"
                            style="position:absolute;z-index:2;top:0;
                              left:0;filter: alpha(opacity=0);opacity:0;
                              background-color:transparent;color:transparent;"
                            onchange='$("#upload-file-info").html($(this).val());' />
                 </a>
                 <span class="label label-info" id="upload-file-info"></span>
             </div> 
            
            @if (Model.ImageData == null)
            {
                <div class="form-control-static">No Image</div>
            }
            else {
                <span class="col-sm-2"></span>
                <div class="col-sm-10">
            <img src="@Url.Action("GetImage","Product",new { Model.ProductID})" width="150" height="150" />
                    </div>
            }
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-warning" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index",null,htmlAttributes: new { @class="btn btn-info"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
